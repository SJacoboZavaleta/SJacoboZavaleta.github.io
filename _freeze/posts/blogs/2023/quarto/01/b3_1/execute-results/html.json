{
  "hash": "0b422e7b1330775eeace2dcef65fba08",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Guía Nutricional con Shiny: Selección de Alimentos de la Tabla Peruana de composición de alimentos (4ta Edición)\"\nauthor: Sergio Jácobo\ndescription: Basado en las Tablas Peruanas de composición de Alimentos, Ministerio de Salud del Perú, Lima.\ndate: last-modified\ncategories: \n    - \"R\"\n    - \"ShinnyApp\"\n    - \"Posit\"\nreading-time: true\nnumber-sections: false\nlang: es\ntoc: true\nimage: images/thumbnail.png\nimage-alt: Portada del Tablas Peruanas de composición de Alimentos por el Ministerio de Salud del Perú\nlanguage: \n    section-title-footnotes: Notas\n---\n\n\n\n\n\n# A quien va dirigido?\n\nA todas los profesionales en nutrición que desean planificar o programar sus dietas nutricionales en base a la composición nutricional de diversos alimentos en la cocina peruana según la cantidad deseada.\n\n# Implementación\n\n> Versión 2 ✅:\n>\n> -   Se incluyeron alimentos compuestos como platos de entrada y almuerzo.  \n> -   Se incluyó la tabla de anexos de codigos de componentes.  \n> -   Se centró el contenido de las tablas.\n> -   Se mejoró la salida luego de seleccionar cada tabla principal y se incluyó una opción de copiado.\n\n> Versión 1 {{< fa folder-closed >}}:\n>\n> -   Es posible calcular cualquier composición en base a la cantidad ingresada por el usuario en gramos.\n>\n> -   Solo se incluyeron alimentos individuales y no compuestos.\n\n## El Código\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"Ruta/a/tu/proyecto/\")\n\nlibrary(shiny)\nlibrary(DT) # Manejo de tablas en formato Data Frame\nlibrary(shinyjs)\n\n# Cargar datos para alimentos individuales\nalimentos <- read.csv(\"alimentos.csv\") # <1>\ncolnames(alimentos) <- c(\n    \"COD\", \"NUM\", \"ALIMENTO\", \"ENERCKCAL\", \"ENERCKJ\", \"WATER\", \"PROCNT\",\n    \"FAT\", \"CHOCDF\", \"ZN\", \"K\", \"P\", \"FE\", \"VITA\",\n    \"ACFOLIC\", \"VITC\", \"NA\"\n) # <1>\nalimentos <- alimentos[, c(\n    \"COD\", \"NUM\", \"ALIMENTO\", \"ENERCKCAL\", \"ENERCKJ\", \"WATER\", \"PROCNT\",\n    \"FAT\", \"CHOCDF\", \"ZN\", \"K\", \"P\", \"FE\", \"VITA\", \"ACFOLIC\", \"VITC\", \"NA\"\n)] # <1>\n\n# Cargar datos para alimentos compuestos\nplatos <- read.csv(\"alimentosCompuestos.csv\") # <2>\ncolnames(platos) <- c(\n    \"COD\", \"NUM\", \"ALIMENTO\", \"ENERCKCAL\", \"ENERCKJ\", \"WATER\", \"PROCNT\",\n    \"FAT\", \"CHOCDF\", \"CHOAVL\", \"FIBTG\", \"ASH\", \"CA\", \"P\", \"ZN\", \"FE\", \"VITA\", \"THIA\",\n    \"RIBF\", \"NIA\", \"VITC\", \"ACFOLIC\", \"NA\", \"K\", \"ESTRATO\"\n) # <2>\nplatos <- platos[, c(\n    \"COD\", \"NUM\", \"ALIMENTO\", \"ENERCKCAL\", \"ENERCKJ\", \"WATER\", \"PROCNT\", \"FAT\", \"CHOCDF\",\n    \"ZN\", \"K\", \"P\", \"FE\", \"VITA\", \"ACFOLIC\", \"VITC\", \"NA\"\n)] # <2>\n\n\n# Creamos tablas de Anexo\ncodigo <- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"Q\", \"T\", \"U\", \"SE\", \"SS\") # <3>\ncategoria <- c(\n    \"Cereales y derivados\", \"Verduras, hortalizas y derivados\", \"Frutas y derivados\",\n    \"Grasas, aceites y oleaginosas\", \"Pescados y mariscos\", \"Carnes y derivados\",\n    \"Leche y derivados\", \"Bebidas (alcohólicas y analcohólicas)\", \"Huevos y derivados\",\n    \"Productos azucarados\", \"Misceláneos\", \"Alimentos infantiles\", \"Leguminosas y derivados\",\n    \"Tubérculos, raíces y derivados\", \"Alimentos preparados (entrada)\",\n    \"Alimentos preparados (segundo)\"\n) # <3>\ncodigoGrupo <- data.frame(codigo, categoria)\ncolnames(codigoGrupo) <- c(\"Código\", \"Categoría\") # <3>\n\n\n# Cargas coódigos de componentes - Anexo\nanexoCodigo <- read.csv(\"anexosCodigoComponentes.csv\") # <4>\ncolnames(anexoCodigo) <- c(\"Componente\", \"Identificador INFOODS\", \"Unidad\", \"Comentario\") # <4>\n\n# Definir interfaz\nui <- fluidPage( # <5>\n    includeCSS(\"styles.css\"), # <6>\n    titlePanel(\"TABLAS PERUANAS DE COMPOSICIÓN DE ALIMENTOS - 2017\"),\n    h2(tags$a(\"Fuente: Centro Nacional de Alimentación y Nutrición, 2017, Ministerio de Salud del Perú, Lima.\",\n        href = \"https://www.gob.pe/institucion/ins/informes-publicaciones/4231115-tablas-peruanas-de-composicion-de-alimentos\"\n    )),\n    h3(\"Modificado para uso particular en planificación de dietas. Basado en la experiencia de Rosa Zavaleta Gavidia (Nutricionista CNP: 5681).\"),\n    h3(class = \"bold-text\", \"Nota: Composición en 100 g de alimento\"),\n    numericInput(\"proportion\", \"Nueva composición (gramos)?\", value = 100, min = 1, max = 500), # <7>\n    useShinyjs(), # <8>\n    tabsetPanel( # <9>\n        tabPanel(\n            \"Alimentos individuales\",\n            dataTableOutput(\"foodTable1\"),\n            h4(class = \"bold-text\", \"Componentes seleccionados:\"),\n            tableOutput(\"selectedData1\"),\n            actionButton(\"copyButton1\", \"Copiar datos seleccionados\")\n        ),\n        tabPanel(\n            \"Alimentos en platos\",\n            dataTableOutput(\"foodTable2\"),\n            h4(\"Componentes seleccionados:\"),\n            tableOutput(\"selectedData2\"),\n            actionButton(\"copyButton2\", \"Copiar datos seleccionados\")\n        ),\n        tabPanel(\n            \"Códigos y grupos\",\n            tableOutput(\"codigoGrupos\"),\n            tableOutput(\"codigoComponentes\")\n        )\n    ),\n    hr(),\n    tags$div( # <10>\n        class = \"footer\",\n        style = \"text-align: center; background-color: #333; color: #fff; padding: 20px;\",\n        tags$h4(\"¿Te ha gustado esta App?\"),\n        tags$p(\n            \"¡Esta aplicación ha sido desarrollada con \",\n            tags$a(\n                href = \"https://shiny.rstudio.com/\",\n                style = \"color: #ffcc00; font-weight: bold;\",\n                \"R Shiny\"\n            ),\n            \"!\"\n        ),\n        tags$p(\n            \"Si quieres aprender más sobre Shiny y crear tus propias aplicaciones interactivas, \",\n            tags$a(\n                href = \"https://shiny.rstudio.com/tutorial/\",\n                style = \"color: #ffcc00; font-weight: bold;\",\n                \"haz clic aquí\"\n            ),\n            \" para acceder al tutorial oficial.\"\n        ),\n        tags$p(\n            \"¡Comienza a explorar el poder de Shiny hoy mismo!\",\n            style = \"font-weight: bold;\"\n        )\n    )\n)\n\n# Definir server\nserver <- function(input, output, session) {\n    getComposition <- function(input_table) { # <11>\n        proportionConversion <- input$proportion\n        idx <- input[[input_table]]\n        selectedRow <- alimentos[idx, c(\"PROCNT\", \"FAT\", \"CHOCDF\", \"ZN\", \"K\", \"P\", \"FE\", \"VITA\", \"ACFOLIC\", \"VITC\", \"NA\")]\n        selectedRow <- selectedRow * proportionConversion / 100\n        rownames(selectedRow) <- NULL\n        selectedRow\n    }\n\n    output$foodTable1 <- renderDataTable( # <12>\n        alimentos,\n        server = FALSE, selection = \"single\",\n        options = list(\n            pageLength = 15,\n            columnDefs = list(\n                list(\n                    targets = \"_all\",\n                    className = \"dt-center\"\n                )\n            )\n        )\n    )\n\n    output$selectedData1 <- renderTable({ # <13>\n        getComposition(\"foodTable1_rows_selected\")\n    })\n\n    output$foodTable2 <- renderDataTable( # <12>\n        platos,\n        server = FALSE, selection = \"single\",\n        options = list(\n            pageLength = 15,\n            columnDefs = list(\n                list(\n                    targets = \"_all\",\n                    className = \"dt-center\"\n                )\n            )\n        )\n    )\n\n    output$selectedData2 <- renderTable({ # <13>\n        getComposition(\"foodTable2_rows_selected\")\n    })\n\n    output$codigoGrupos <- renderTable(codigoGrupo) # <14>\n\n    output$codigoComponentes <- renderTable(anexoCodigo) # <14>\n\n    observeEvent(input$copyButton1, { # <15>\n        selectedData <- getComposition(\"foodTable1_rows_selected\")\n        if (length(input$foodTable1_rows_selected) > 0) {\n            clipboard <- apply(selectedData, 2, paste, collapse = \" \")\n            writeClipboard(clipboard)\n            shinyjs::alert(\"Datos copiados al portapapeles\")\n        } else {\n            shinyjs::alert(\"Selecciona una fila para copiar los datos\")\n        }\n    })\n\n    observeEvent(input$copyButton2, { # <15>\n        selectedData <- getComposition(\"foodTable2_rows_selected\")\n        if (length(input$foodTable2_rows_selected) > 0) {\n            clipboard <- apply(selectedData, 2, paste, collapse = \" \")\n            writeClipboard(clipboard)\n            shinyjs::alert(\"Datos copiados al portapapeles\")\n        } else {\n            shinyjs::alert(\"Selecciona una fila para copiar los datos\")\n        }\n    })\n}\n\n# Ejecutar la aplicación Shiny\nshinyApp(ui, server) # <16>\n```\n:::\n\n\n\n\n\n1. Cargar tabla de alimentos individuales (`alimentos.csv`), seleccionar datos requeridos y modificar sus atributos (nombre de columnas).\n2. Cargar tabla de alimentos compustos (`alimentosCompuestos.csv`), seleccionar datos requeridos y modificar sus atributos (nombre columnas).\n3. Crear tabla de anexos para alimentos según código por grupo nutricional (*Opcional*).\n4. Crear tabla de anexos para alimentos según código de componentes nutricional (*Opcional*).\n5. Implementar la interfaz de usuario de la aplicación Shiny llamando a `fluidPage`.\n6. Incluir ciertos estilos de contenido (archivo css).\n7. Definir una entrada de texto para la nueva composición de alimentos deseada.\n8. Complemento para mostrar ayudas visuales (mensajes). \n9. Mostrar múltiples tablas mediante mediante pestañas separadas con `tabPanel()`.\n10. Agregar un pie de nota con detalles de la aplicación.\n11. Implementar la función `server` que define la lógica del programa. Definir la función para manipular la fila seleccionada de las tablas de composición.\n12. Renderizar las tablas principales de alimentos. Para centrar todo el contenido de las tablas se creó un estilo css `dt-center`. \n13. Renderizar los datos de componentes de interés **(salida)**.\n14. Renderizar las tablas de Anexos.\n15. Evento que permite copiar los datos seleccionados al portapapeles. Utilizando el paso 8.\n16. Implementar la aplicación llamando a `shinyApp`.\n\n## El demo ⏩\n\n[![Aplicación Shiny](images/1.png){fig-alt=\"Aplicación de composición de tablas de alimentos usando Shiny\"}](https://sergiojacobozavaleta.shinyapps.io/rosaapp/)\n\n::: callout-tip\n## Más allá de esta guía\n\nRevisar la página oficial para obtener las [Tablas de Composición completas](https://web.ins.gob.pe/es/alimentacion-y-nutricion/ciencia-y-tecnologia-de-alimentos/tabla-de-composicion-de-alimentos)\n:::\n\n::: {.further-info}\n::: grid\n::: {.g-col-12 .g-col-md-12}\n::: {.bio-footer}\n<img src=\"../../../../../images/sergio-bio.jpg\" alt=\"Headshot of Sergio\" class=\"img-footer\">\n<div class=\"p-footer\">\n  Soy Sergio, un apasionado ingeniero en mecatrónica dedicado al diseño de robots clínicos y dispositivos biomédicos. Puedes seguirme en [Twitter](https://twitter.com/JacoboZavaleta), ver algunos repositorios de mi trabajo en [Github](https://www.github.com/SJacoboZavaleta), o leer más sobre mí en este [sitio web](../../../../about.qmd).\n</div>\n:::\n\n:::\n\n\n:::\n:::\n",
    "supporting": [
      "b3_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}