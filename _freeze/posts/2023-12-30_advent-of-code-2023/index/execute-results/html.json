{
  "hash": "e3e19e1ae3f8d3121e26031ce735a5b3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Advent of Code 2023 wrap up\"\ndescription: |\n  Reflections on participating in this seasonal coding challenge.\ndate: 2023-12-30\nauthor: \n  - name: Ella Kaye\nsite-url: https://ellakaye.co.uk\nimage: \"Advent_Of_Code_Logo.png\"\n#image-alt: |\n#\tASCII art Christmas tree with Advent of Code written below in a green monospace font.\ncategories: [Advent of Code, R]\nopen-graph: true\ndraft: false\n---\n\n\n<!--------------- set up ----------------->\n\n\n::: {.cell}\n\n:::\n\n\n<!--------------- post content ----------------->\n\nThis year I've been writing up my Advent of Code solutions, with explanations, on a [dedicated site](https://adventofcode.ellakaye.co.uk). \nThis is a cross-post of my final entry of the year from there.\n\nThis was my first year taking Advent of Code seriously, \nattempting to complete puzzles on the day they were released.^[At least to the extent that family and other commitments would allow.] \nWell, I say \"seriously\" -- actually, it was a lot of fun!\n\nAs of December 25th, I have 30 stars: 12 days with both parts^[Days 1-4, 6-9, 11, 13, 15, 24] of the puzzle complete, 6 days with just part 1^[Days 5, 10, 14, 21, 23, 25]. \nI'm happy with that.^[As of December 26th, it was enough to get me to 13th place on the [\\#RStats AOC leaderboard](https://rstats-aoc.netlify.app).]\n\nI stuck to my intention of solving most of the puzzles in **base** R, \nthough taking a **tidyverse** approach when it struck me as the most appropriate, \nand making use of **igraph** and **tidygraph** when a graph structure was called for. I learnt a lot. I got more comfortable with base R, including learning how to use functions for working with regular expressions. I became familiar with new additions to the tidyverse, such as the `separate_*()` family of functions and `consectutive_id()`. Moreover, I met my goal of solving a puzzle in C, albeit only Part 1 of Day 1. I also picked up a little graph theory and learnt about algorithms such as Dijkstra's, breadth-first search and depth-first search.\n\n## aochelpers\n\nIn the run-up to Advent of Code this year, \nI built this website for my solutions and explanations, along with a companion package, [aochelpers](https://ellakaye.github.io/aochelpers). \nI wrote about those [here](https://ellakaye.co.uk/posts/2023-11-29_aoc-project/).\nThat work paid off. It feels neat to have a dedicated site and **aochelpers** really streamlined the process of developing my solutions and producing the posts.\n\nAs I expected, over the course of working on the challenges, I've written a few functions that I expect to use again in other iterations of Advent of Code, which I shall be adding to **aochelpers** in due course. I have other ideas to improve the package as well.\n\n## Use of LLMs\nIn my [introduction post](https://adventofcode.ellakaye.co.uk/2023/day/introduction.html), \nI wrote that I wanted to see what I could learn from/about working with LLMs in these challenges. \nThey were useful on [Day 1](https://adventofcode.ellakaye.co.uk/2023/day/1) when I was working in C.\nOther than that, I mostly abandoned them.\n\nOn days when I knew how to solve the puzzles myself, having Copilot enabled in RStudio got in the way. \nI preferred writing out my own solution.\nOn days when I thought Copilot might help, it instead introduced bugs into my code, e.g. on [Day 11](https://adventofcode.ellakaye.co.uk/2023/day/11), when I wanted it to figure out the indices on which to split the matrix. \nIt did at least give me some code I could alter, \nthough in retrospect, by the time I'd figured out where Copilot was wrong and fixed it, it would have been quicker to do it myself from scratch.\n\nTowards the end, I did try again with both ChatGPT and Copilot when I was stuck,\nfor example on [Day 24, Part 2](https://adventofcode.ellakaye.co.uk/2023/day/24#part-2), \nbut both were unable to help, suggesting code that generated errors, which no amount to trying to get it to correct itself, or attempting to myself, could resolve.\n\nOne type of query I did find ChatGPT useful for was to have it remind me of fairly basic things that I had done or known before but forgotten, for example how to initiate an empty list of length $n$^[`vector(\"list\", n)`], the equation of a straight line given a point and a gradient, or to check the ASCII value of a character. These are questions I would previously have googled, but these days, for these kinds of questions, getting the answer straight from ChatGPT is quicker and I trusted that it would be able to answer them correctly.\n\nIt struck me that many of the puzzles this year had convoluted instructions and examples. Sometimes, the hardest part of a day was trying to comprehend the challenge, rather than writing the code itself.\nI wonder if that was a deliberate attempt to make it hard for the puzzles to be solved by LLMs -- if the text is tricky for humans to parse, it's going to be hard for a machine.\n\nLLMs have their uses but, for Advent of Code, \nwhere part of the fun is trying to challenge oneself, \nI preferred to do the coding myself.\n\n## Before December 2024\nThere's much I want to learn before tackling Advent of Code again this time next year. \nThe need for regular expressions comes up a lot and I'd like to improve my knowledge of those. \nI was pleased with my [Day 1](https://adventofcode.ellakaye.co.uk/2023/day/1) when I wrote it but, in retrospect, with better regex skills, I would have found it easier, and been able to produce a more efficient solution.\n\nIt's clear that to be successful at Advent of Code puzzles, \nparticularly in the latter stages, \nI need to know much more about data structures and algorithms.\nI've now bought the book [R Data Structures and Algorithms](https://www.packtpub.com/product/r-data-structures-and-algorithms/9781786465153), which seems like a good place to start. I also have the textbook [Graphs, Networks and Algorithms](https://link.springer.com/book/10.1007/978-3-642-32278-5) which I've started to read, though I won't have the time to work through the whole book in the next eleven months.^[I got \nover-excited a few years ago when my local bookshop (the wonderful Blackwell's in Oxford) had a sale on Springer books. I bought several and am always glad when I have reason to return to any of them.]\n\nMoreover, from January, I'm going to be participating in a C study group^[Details are being finalised but I'll come back and add a link once I have one.] which will be working through weeks 1-5 of the [CS50](https://cs50.harvard.edu/x/) material. \nSession 3 of that covers algorithms and session 5 teaches data structures, both of which will be useful, no doubt, for Advent of Code. \nTo practice what I'm learning, I am planning, over the next year, to work through the 2015 run of Advent of Code, implementing solutions in both R and C.\nI'll update the site as I do.\n\n\n<!--------------- appendices go here ----------------->\n\n\n::: {.cell}\n::: {.cell-output-display}\n## Last updated {.appendix}\n \n2024-03-26 07:01:08.100755\n \n## Details {.appendix}\n \n[source code](https://github.com/EllaKaye/ellakaye.co.uk/tree/main/posts/2023-12-30_advent-of-code-2023/index.qmd){target='_blank'}, [R environment](https://github.com/EllaKaye/ellakaye.co.uk/tree/main/posts/2023-12-30_advent-of-code-2023/renv.lock){target='_blank'}\n:::\n:::\n\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.2 (2023-10-31)\n os       macOS Sonoma 14.3.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2024-03-26\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.4.533 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package     * version date (UTC) lib source\n P sessioninfo * 1.2.2   2021-12-06 [?] CRAN (R 4.3.0)\n\n [1] /Users/ellakaye/Rprojs/mine/ellakaye-quarto/renv/library/R-4.3/aarch64-apple-darwin20\n [2] /Users/ellakaye/Library/Caches/org.R-project.R/R/renv/sandbox/R-4.3/aarch64-apple-darwin20/ac5c2659\n\n P ── Loaded and on-disk path mismatch.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n</details>\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}