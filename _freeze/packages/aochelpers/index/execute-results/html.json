{
  "hash": "e355a2c9866a13c6153cf7715d3afe87",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: aochelpers\ndescription: |\n  Companion package for with websites created from [advent-of-code-website-template](https://github.com/EllaKaye/advent-of-code-website-template) \ndate: 2023-11-29\nauthor: \n  - name: Ella Kaye\nsite-url: https://ellakaye.co.uk\nimage: ../../images/hex/aochelpers.png\n# N.B. Don't use \"\" in image-alt\nimage-alt: |\n  aochelpers hex sticker, with a bright green outline and a dark background. The hex is filled with a white ASCII art star, with the word aochelpers in bright green in the middle.\n#categories:\n#  - TAG_1\n#  - TAG_2\n#twitter-card: \n# uncomment lines below for different title and description to post\n#  title: |\n#  description: |\n# uncomment for different image to post\n#  image: |\n#  image-alt: |\n#  defaults to 500 x 500 summary: uncomment lines below for large card\n#  image-width: 600 \n#  image-height: 314\n#  card-style: \"summary_large_image\" \ndraft: false\n---\n\n::: {.cell}\n\n:::\n\n\n## Main resources\n\n`<a href=\"https://github.com/EllaKaye/aochelpers\" class=\"icon-link\" target=\"_blank\" rel=\"noopener\"><i class=\"fab fa-github\"></i> source</a>`{=html}\n`<a href=\"https://ellakaye.github.io/aochelpers/\" class=\"icon-link\" target=\"_blank\" rel=\"noopener\"><i class=\"fas fa-box-open\"></i> documentation</a>`{=html}\n`<a href=\"../../images/hex/aochelpers.png\" class=\"icon-link\" target=\"_blank\" rel=\"noopener\"><i class=\"fas fa-dice-d6\"></i> hex sticker</a>`{=html}\n\n## Additional resources\n\nThe website template which {aochelpers} is a companion for:\n\n`<a href=\"https://github.com/EllaKaye/advent-of-code-website-template\" class=\"icon-link\" target=\"_blank\" rel=\"noopener\"><i class=\"fab fa-github\"></i> GitHub</a>`{=html}\n`<a href=\"https://ellakaye.github.io/advent-of-code-website-template\" class=\"icon-link\" target=\"_blank\" rel=\"noopener\"><i class=\"fas fa-globe\"></i> website</a>`{=html}\n\n\nA blog post about how the {aochelpers} package came to be:\n\n`<a href=\"../../posts/2023-11-29_aoc-project/index.qmd\" class=\"icon-link\" target=\"_blank\" rel=\"noopener\"><i class=\"fas fa-blog\"></i> blog post</a>`{=html}\n\n## Overview \n\n**aochelpers** is a companion package to the Advent of Code website template:\n<https://github.com/EllaKaye/advent-of-code-website-template/>. \nIt contains functions to create new listings and posts corresponding to years and days of the Advent of Code challenges. It also contains functions to download and save puzzle input from the Advent of Code website, \nand to read it in to R in a variety of formats. \nIn time, I will add functions that are useful in solving the puzzles.\n\nThe functions are designed to be used in conjunction with the Advent of Code website template, and so are easier to demonstrate in that context than here,\nso see the repo <https://github.com/EllaKaye/advent-of-code-website-template/> and the corresponding demo site, <https://ellakaye.github.io/advent-of-code-website-template/>, for further documentation and an example.\n\n## Installation\n\nYou can install the development version of aochelpers from [GitHub](https://github.com/) with:\n\n``` r\n# install.packages(\"remotes\")\nremotes::install_github(\"EllaKaye/aochelpers\")\n```\n\n## Adding listings pages and posts\n\nThe main functions in *aochelpers* are `aoc_new_year()` and `aoc_new_day()`. \nThey copy files from the website's `\"_template\"` directory, and paste them into the appropriate location in the website directory. Moreover, in the copies, they replace any instances of `YYYY` and `DD` in the templates with the values of the `year` and `day` arguments, respectively, both in the directory and file names, and in the contents of the .qmd files themselves. In the descriptions below, the `YYYY` and `DD` placeholders are used to indicate where the year and day values will be inserted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aochelpers)\n# Add a listing page a directory for a new year\naoc_new_year() # current year \naoc_new_year(2022) # specified year\n\n# Add a post for a new day\naoc_new_day(1) # day 1 of current year\naoc_new_day(2, 2022) # day 2 of specified year\n```\n:::\n\n\n[`aoc_new_year()`](https://ellakaye.github.io/aochelpers/reference/aoc_new_year.html) will\n\n- create a new directory for the specified year, at `./YYYY/`.\n- create a new listing page for the year, as `./YYYY.qmd`. The listing page will be created using the template `./_templates/YYYY.qmd`. The listing page picks up posts from the `YYYY/day` directory. (This directory structure echoes the structure of the Advent of Code website.) \n- optionally create an introductory post for the year, as `./YYYY/day/YYYY-introduction`, using the template `./_templates/YYYY-intro`. The post will be created only if the `intro` argument is `TRUE` (the default). Note that, as of Quarto v1.4, there needs to be at least one post in the `YYYY/day` directory for the website to render without error.\n- if `_templates/_metadata.yml` exists, it will be copied to `./YYYY/day/_metadata.yml`. \n\n[`aoc_new_day()`](https://ellakaye.github.io/aochelpers/reference/aoc_new_day.html) will\n\n- create a new directory for the specified day, at `./YYYY/day/DD/`\n- copy the contents of `_templates/post-template` into the above directory\n- download the puzzle input for the day from the Advent of Code website, and save it as `./YYYY/day/DD/input`\n\nSee the [advent-of-code-website-template repo](https://gihub.com/EllaKaye/advent-of-code-website-template) for further details about the default contents of `_templates`.\n\n## Reading in puzzle input\n\n**aochelpers** provides a number of functions to read in puzzle input, once saved from the Advent of Code website. The functions are designed to be used in conjunction with the Advent of Code website template, so to see the output of the functions, see the repo <https://github.com/EllaKaye/advent-of-code-website-template/> and the corresponding site, <https://ellakaye.github.io/advent-of-code-website-template/>, for examples of their output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naoc_input_vector(1, 2022, \"numeric\")\naoc_input_data_frame(2, 2022)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}